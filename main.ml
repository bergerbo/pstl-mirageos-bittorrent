(* Generated by Mirage (Tue, 14 Apr 2015 13:26:57 GMT). *)

open Lwt

let _ = Printexc.record_backtrace true

module Console = Console_unix

let console1 () =
  Console.connect "0"

module M4 = Torrent_parser.Main(Console)

let t4 = console1

let block1 () =
  Block.connect "/home/rockinbobo/lmd/master/pstl/disk.img"

module Fat1 = Fat.Fs.Make(Block)(Io_page)

let fat1 () =
  block1 () >>= function
  | `Error _ -> fail (Failure "fat1")
  | `Ok dev  -> Fat1.connect dev

module M3 = Torrent_parser.Main(Console)(Fat1)

let t3 () =
  console1 () >>= function
  | `Error e -> fail (Failure "console1")
  | `Ok console1 ->
  fat1 () >>= function
  | `Error e -> fail (Failure "fat1")
  | `Ok fat1 ->
  return (`Ok (console1, fat1))

module Stackv41 = Tcpip_stack_socket.Make(Console)

let stackv41 () =
  console1 () >>= function
  | `Error _    -> fail (Failure "console1")
  | `Ok console ->
  let config = {
    V1_LWT.name = "stackv41";
    console; interface = [Ipaddr.V4.of_string_exn "0.0.0.0"];
    mode = ();
  } in
  Stackv41.connect config

module Resolver1_res = Resolver_lwt
module Resolver1_dns = Dns_resolver_mirage.Make(OS.Time)(Stackv41)
module Resolver1 = Resolver_mirage.Make(Resolver1_dns)

let resolver1 () =
  stackv41 () >>= function
  | `Error _  -> fail (Failure "stackv41")
  | `Ok stackv41 ->
  let ns = None in
  let ns_port = None in
  let res = Resolver1.init ?ns ?ns_port ~stack:stackv41 () in
  return (`Ok res)

module M2 = Torrent_parser.Main(Console)(Fat1)(Resolver1_res)

let t2 () =
  console1 () >>= function
  | `Error e -> fail (Failure "console1")
  | `Ok console1 ->
  fat1 () >>= function
  | `Error e -> fail (Failure "fat1")
  | `Ok fat1 ->
  resolver1 () >>= function
  | `Error e -> fail (Failure "resolver1")
  | `Ok resolver1 ->
  return (`Ok (console1, fat1, resolver1))

module Vchan1 = Conduit_localhost

let vchan1 = Vchan1.register "localhost"

module Conduit1 = Conduit_mirage.Make(Stackv41)(Vchan1)

let conduit1 () =
  stackv41 () >>= function
  | `Error _  -> fail (Failure "stackv41")
  | `Ok stackv41 ->
  vchan1 >>= fun vchan1 ->
  Conduit1.init ~peer:vchan1 ~stack:stackv41 () >>= fun conduit1 ->
  return (`Ok conduit1)

module M1 = Torrent_parser.Main(Console)(Fat1)(Resolver1_res)(Conduit1)

let t1 () =
  conduit1 () >>= function
  | `Error e -> fail (Failure "conduit1")
  | `Ok conduit1 ->
  console1 () >>= function
  | `Error e -> fail (Failure "console1")
  | `Ok console1 ->
  fat1 () >>= function
  | `Error e -> fail (Failure "fat1")
  | `Ok fat1 ->
  resolver1 () >>= function
  | `Error e -> fail (Failure "resolver1")
  | `Ok resolver1 ->
  M1.start console1 fat1 resolver1 conduit1

let () =
  OS.Main.run (join [t1 ()])
